p_value_data[, -c(1:3)] <- lapply(p_value_data[, -c(1:3)], function(x) as.numeric(gsub(",", ".", x)))
# Define colors for each combination as previously specified
colors <- c(
"priority_1_Downregulated" = "darkblue", "priority_1_Upregulated" = "darkred", "priority_1_Nonsignificant" = "grey",
"priority_2_Downregulated" = "cyan3", "priority_2_Upregulated" = "darkorange3", "priority_2_Nonsignificant" = "grey",
"priority_3_Downregulated" = "blue", "priority_3_Upregulated" = "red", "priority_3_Nonsignificant" = "grey",
"priority_4_Downregulated" = "deepskyblue4", "priority_4_Upregulated" = "coral2", "priority_4_Nonsignificant" = "grey"
)
# List of parameter to test
parameter_list <- c("EDD", "ESD", "FS", "HP_median", "DI_median", "relaxtime", "SI_median", "AI", "SV", "CO", "peaked_median", "min.velocity", "max.velocity", "MAD_SI", "MAD_DI", "MAD_HP", "tt10r_median", "MAD_tt10r")
# Loop over each parameter to create a volcano plot
for(parameter in parameter_list) {
p_value_col <- parameter
fold_change_col <- paste("fold_change", parameter, sep = "_")
# Convert the p-value and fold change columns to numeric (if not already)
p_value_data[[p_value_col]] <- as.numeric(as.character(p_value_data[[p_value_col]]))
p_value_data[[fold_change_col]] <- as.numeric(as.character(p_value_data[[fold_change_col]]))
# Create the Category column before filtering out NA values
p_value_data$Category <- with(p_value_data, paste(priority_rank, ifelse(p_value_data[[p_value_col]] < 0.05 & p_value_data[[fold_change_col]] > 1, "Upregulated",
ifelse(p_value_data[[p_value_col]] < 0.05 & p_value_data[[fold_change_col]] < 1, "Downregulated", "Nonsignificant")), sep = "_"))
#  filter out rows with NA in the critical columns
p_value_data_filtered <- (p_value_data[, c(p_value_col, fold_change_col, "fly_gene", "priority_rank", "Category")])
# Create the volcano plot using ggplot2
p <- ggplot(p_value_data_filtered, aes_string(x = fold_change_col, y = paste("-log10(", p_value_col, ")", sep = ""), color = "Category")) +
geom_hline(yintercept = -log10(0.05), linepriority_rank = "dashed", color = "red") +
geom_vline(xintercept = 1, linepriority_rank = "dashed", color = "grey", label = "Effect Size = 1") +
geom_point(alpha = 0.5) +
scale_color_manual(values = colors) +
geom_text_repel(aes(label = ifelse(p_value_data[[p_value_col]] < 0.05, as.character(fly_gene), ""),
fontface = ifelse(priority_rank %in% c("Trip_short", "Trip_long"), "italic", "bold")),
box.padding = 0.35, point.padding = 0.5, size = 2.5, max.overlaps = Inf) +
labs(y = "-log10(P-value)", x = "Fold change", title = "_1WF_",
subtitle = paste("RNAi Knockdown Effect on", parameter)) +
theme_minimal()+
theme(legend.position = "none", plot.background = element_rect(color = "black", size = 0.5), panel.background = element_rect(color = "black", size = 0.5))
# Print the plot to the R console
print(p)
# Save the plot to the "Plots" directory
ggsave(file.path("ALL_1wf_priority", paste0(parameter, "_volcano plot.png")), plot = p, width = 6, height = 6, bg = "white")
}
library(cluster)
library(readxl)
library(ggplot2)
library(ggrepel)
# Set working directory to the path containing the data files
WORKING_DIR <- "C:/Users/krifa/Desktop/Analyse/Droso_Brs/Nantes Validations_Second_contrat/effect_size/ALL/1WF"
# Load the data from an Excel file
p_value_data <- read_excel("ALL_1wf_volcano plot_df.xlsx")
# Replace commas with periods in numeric columns and convert them to numeric
p_value_data[, -c(1:3)] <- lapply(p_value_data[, -c(1:3)], function(x) as.numeric(gsub(",", ".", x)))
# Define colors for each combination as previously specified
colors <- c(
"GD_Downregulated" = "darkblue", "GD_Upregulated" = "darkorange", "GD_Nonsignificant" = "grey",
"KK_Downregulated" = "cyan3", "KK_Upregulated" = "darkorange3", "KK_Nonsignificant" = "grey",
"shRNA_Downregulated" = "blue", "shRNA_Upregulated" = "red", "shRNA_Nonsignificant" = "grey",
"Trip_short_Downregulated" = "deepskyblue4", "Trip_short_Upregulated" = "coral2", "Trip_short_Nonsignificant" = "grey",
"Trip_long_Downregulated" = "cornflowerblue", "Trip_long_Upregulated" = "darkred", "Trip_long_Nonsignificant" = "grey"
)
# List of parameter to test
parameter_list <- c("EDD", "ESD", "FS", "HP_median", "DI_median", "relaxtime", "SI_median", "AI", "SV", "CO", "peaked_median", "min.velocity", "max.velocity", "MAD_SI", "MAD_DI", "MAD_HP", "tt10r_median", "MAD_tt10r")
# Loop over each parameter to create a volcano plot
for(parameter in parameter_list) {
p_value_col <- parameter
fold_change_col <- paste("fold_change", parameter, sep = "_")
# Convert the p-value and fold change columns to numeric (if not already)
p_value_data[[p_value_col]] <- as.numeric(as.character(p_value_data[[p_value_col]]))
p_value_data[[fold_change_col]] <- as.numeric(as.character(p_value_data[[fold_change_col]]))
# Create the Category column before filtering out NA values
p_value_data$Category <- with(p_value_data, paste(Type, ifelse(p_value_data[[p_value_col]] < 0.05 & p_value_data[[fold_change_col]] > 1, "Upregulated",
ifelse(p_value_data[[p_value_col]] < 0.05 & p_value_data[[fold_change_col]] < 1, "Downregulated", "Nonsignificant")), sep = "_"))
#  filter out rows with NA in the critical columns
p_value_data_filtered <- (p_value_data[, c(p_value_col, fold_change_col, "fly_gene", "Type", "Category")])
# Create the volcano plot using ggplot2
p <- ggplot(p_value_data_filtered, aes_string(x = fold_change_col, y = paste("-log10(", p_value_col, ")", sep = ""), color = "Category")) +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
geom_vline(xintercept = 1, linetype = "dashed", color = "grey", label = "Effect Size = 1") +
geom_point(alpha = 0.5) +
scale_color_manual(values = colors) +
geom_text_repel(aes(label = ifelse(p_value_data[[p_value_col]] < 0.05, as.character(fly_gene), ""),
fontface = ifelse(Type %in% c("Trip_short", "Trip_long"), "italic", "bold")),
box.padding = 0.35, point.padding = 0.5, size = 2.5, max.overlaps = Inf) +
labs(y = "-log10(P-value)", x = "Fold change", title = "_1WF_",
subtitle = paste("RNAi Knockdown Effect on", parameter)) +
theme_minimal()+
theme(legend.position = "none", plot.background = element_rect(color = "black", size = 0.5), panel.background = element_rect(color = "black", size = 0.5))
# Print the plot to the R console
print(p)
# Save the plot to the "Plots" directory
ggsave(file.path("ALL_1wf", paste0(parameter, "_volcano plot.png")), plot = p, width = 6, height = 6, bg = "white")
}
library(cluster)
library(readxl)
library(ggplot2)
library(ggrepel)
# Set working directory to the path containing the data files
WORKING_DIR <- "C:/Users/krifa/Desktop/Analyse/Droso_Brs/Nantes Validations_Second_contrat/effect_size/ALL/1WM"
# Load the data from an Excel file
p_value_data <- read_excel("ALL_1wm_volcano plot_df_priority.xlsx")
# Replace commas with periods in numeric columns and convert them to numeric
p_value_data[, -c(1:3)] <- lapply(p_value_data[, -c(1:3)], function(x) as.numeric(gsub(",", ".", x)))
# Define colors for each combination as previously specified
colors <- c(
"priority_1_Downregulated" = "darkblue", "priority_1_Upregulated" = "darkred", "priority_1_Nonsignificant" = "grey",
"priority_2_Downregulated" = "cyan3", "priority_2_Upregulated" = "darkorange3", "priority_2_Nonsignificant" = "grey",
"priority_3_Downregulated" = "blue", "priority_3_Upregulated" = "red", "priority_3_Nonsignificant" = "grey",
"priority_4_Downregulated" = "deepskyblue4", "priority_4_Upregulated" = "coral2", "priority_4_Nonsignificant" = "grey"
)
# List of parameter to test
parameter_list <- c("EDD", "ESD", "FS", "HP_median", "DI_median", "relaxtime", "SI_median", "AI", "SV", "CO", "peaked_median", "min.velocity", "max.velocity", "MAD_SI", "MAD_DI", "MAD_HP", "tt10r_median", "MAD_tt10r")
# Loop over each parameter to create a volcano plot
for(parameter in parameter_list) {
p_value_col <- parameter
fold_change_col <- paste("fold_change", parameter, sep = "_")
# Convert the p-value and fold change columns to numeric (if not already)
p_value_data[[p_value_col]] <- as.numeric(as.character(p_value_data[[p_value_col]]))
p_value_data[[fold_change_col]] <- as.numeric(as.character(p_value_data[[fold_change_col]]))
# Create the Category column before filtering out NA values
p_value_data$Category <- with(p_value_data, paste(priority_rank, ifelse(p_value_data[[p_value_col]] < 0.05 & p_value_data[[fold_change_col]] > 1, "Upregulated",
ifelse(p_value_data[[p_value_col]] < 0.05 & p_value_data[[fold_change_col]] < 1, "Downregulated", "Nonsignificant")), sep = "_"))
#  filter out rows with NA in the critical columns
p_value_data_filtered <- (p_value_data[, c(p_value_col, fold_change_col, "fly_gene", "priority_rank", "Category")])
# Create the volcano plot using ggplot2
p <- ggplot(p_value_data_filtered, aes_string(x = fold_change_col, y = paste("-log10(", p_value_col, ")", sep = ""), color = "Category")) +
geom_hline(yintercept = -log10(0.05), linepriority_rank = "dashed", color = "red") +
geom_vline(xintercept = 1, linepriority_rank = "dashed", color = "grey", label = "Effect Size = 1") +
geom_point(alpha = 0.5) +
scale_color_manual(values = colors) +
geom_text_repel(aes(label = ifelse(p_value_data[[p_value_col]] < 0.05, as.character(fly_gene), ""),
fontface = ifelse(priority_rank %in% c("Trip_short", "Trip_long"), "italic", "bold")),
box.padding = 0.35, point.padding = 0.5, size = 2.5, max.overlaps = Inf) +
labs(y = "-log10(P-value)", x = "Fold change", title = "_1WM_",
subtitle = paste("RNAi Knockdown Effect on", parameter)) +
theme_minimal()+
theme(legend.position = "none", plot.background = element_rect(color = "black", size = 0.5), panel.background = element_rect(color = "black", size = 0.5))
# Print the plot to the R console
print(p)
# Save the plot to the "Plots" directory
ggsave(file.path("ALL_1wm_priority", paste0(parameter, "_Fold change.png")), plot = p, width = 6, height = 6, bg = "white")
}
# Set working directory to the path containing the data files
WORKING_DIR <- "C:/Users/krifa/Desktop/Analyse/Droso_Brs/Nantes Validations_Second_contrat/effect_size/ALL/1WM"
# Load the data from an Excel file
p_value_data <- read_excel("ALL_1wm_volcano plot_df_priority.xlsx")
# Replace commas with periods in numeric columns and convert them to numeric
p_value_data[, -c(1:3)] <- lapply(p_value_data[, -c(1:3)], function(x) as.numeric(gsub(",", ".", x)))
# Define colors for each combination as previously specified
colors <- c(
"priority_1_Downregulated" = "darkblue", "priority_1_Upregulated" = "darkred", "priority_1_Nonsignificant" = "grey",
"priority_2_Downregulated" = "cyan3", "priority_2_Upregulated" = "darkorange3", "priority_2_Nonsignificant" = "grey",
"priority_3_Downregulated" = "blue", "priority_3_Upregulated" = "red", "priority_3_Nonsignificant" = "grey",
"priority_4_Downregulated" = "deepskyblue4", "priority_4_Upregulated" = "coral2", "priority_4_Nonsignificant" = "grey"
)
# List of parameter to test
parameter_list <- c("EDD", "ESD", "FS", "HP_median", "DI_median", "relaxtime", "SI_median", "AI", "SV", "CO", "peaked_median", "min.velocity", "max.velocity", "MAD_SI", "MAD_DI", "MAD_HP", "tt10r_median", "MAD_tt10r")
# Loop over each parameter to create a volcano plot
for(parameter in parameter_list) {
p_value_col <- parameter
fold_change_col <- paste("fold_change", parameter, sep = "_")
# Convert the p-value and fold change columns to numeric (if not already)
p_value_data[[p_value_col]] <- as.numeric(as.character(p_value_data[[p_value_col]]))
p_value_data[[fold_change_col]] <- as.numeric(as.character(p_value_data[[fold_change_col]]))
# Create the Category column before filtering out NA values
p_value_data$Category <- with(p_value_data, paste(priority_rank, ifelse(p_value_data[[p_value_col]] < 0.05 & p_value_data[[fold_change_col]] > 1, "Upregulated",
ifelse(p_value_data[[p_value_col]] < 0.05 & p_value_data[[fold_change_col]] < 1, "Downregulated", "Nonsignificant")), sep = "_"))
#  filter out rows with NA in the critical columns
p_value_data_filtered <- (p_value_data[, c(p_value_col, fold_change_col, "fly_gene", "priority_rank", "Category")])
# Create the volcano plot using ggplot2
p <- ggplot(p_value_data_filtered, aes_string(x = fold_change_col, y = paste("-log10(", p_value_col, ")", sep = ""), color = "Category")) +
geom_hline(yintercept = -log10(0.05), linepriority_rank = "dashed", color = "red") +
geom_vline(xintercept = 1, linepriority_rank = "dashed", color = "grey", label = "Effect Size = 1") +
geom_point(alpha = 0.5) +
scale_color_manual(values = colors) +
geom_text_repel(aes(label = ifelse(p_value_data[[p_value_col]] < 0.05, as.character(fly_gene), ""),
fontface = ifelse(priority_rank %in% c("Trip_short", "Trip_long"), "italic", "bold")),
box.padding = 0.35, point.padding = 0.5, size = 2.5, max.overlaps = Inf) +
labs(y = "-log10(P-value)", x = "Fold change", title = "_1WM_",
subtitle = paste("RNAi Knockdown Effect on", parameter)) +
theme_minimal()+
theme(legend.position = "none", plot.background = element_rect(color = "black", size = 0.5), panel.background = element_rect(color = "black", size = 0.5))
# Print the plot to the R console
print(p)
# Save the plot to the "Plots" directory
ggsave(file.path("ALL_1wm_priority", paste0(parameter, "_volcano plot.png")), plot = p, width = 6, height = 6, bg = "white")
}
library(cluster)
library(readxl)
library(ggplot2)
library(ggrepel)
# Set working directory to the path containing the data files
WORKING_DIR <- "C:/Users/krifa/Desktop/Analyse/Droso_Brs/Nantes Validations_Second_contrat/effect_size/ALL/1WM"
# Load the data from an Excel file
p_value_data <- read_excel("ALL_1wm_volcano plot_df.xlsx")
# Replace commas with periods in numeric columns and convert them to numeric
p_value_data[, -c(1:3)] <- lapply(p_value_data[, -c(1:3)], function(x) as.numeric(gsub(",", ".", x)))
# Define colors for each combination as previously specified
colors <- c(
"GD_Downregulated" = "darkblue", "GD_Upregulated" = "darkorange", "GD_Nonsignificant" = "grey",
"KK_Downregulated" = "cyan3", "KK_Upregulated" = "darkorange3", "KK_Nonsignificant" = "grey",
"shRNA_Downregulated" = "blue", "shRNA_Upregulated" = "red", "shRNA_Nonsignificant" = "grey",
"Trip_short_Downregulated" = "deepskyblue4", "Trip_short_Upregulated" = "coral2", "Trip_short_Nonsignificant" = "grey",
"Trip_long_Downregulated" = "cornflowerblue", "Trip_long_Upregulated" = "darkred", "Trip_long_Nonsignificant" = "grey"
)
# List of parameter to test
parameter_list <- c("EDD", "ESD", "FS", "HP_median", "DI_median", "relaxtime", "SI_median", "AI", "SV", "CO", "peaked_median", "min.velocity", "max.velocity", "MAD_SI", "MAD_DI", "MAD_HP", "tt10r_median", "MAD_tt10r")
# Loop over each parameter to create a volcano plot
for(parameter in parameter_list) {
p_value_col <- parameter
fold_change_col <- paste("fold_change", parameter, sep = "_")
# Convert the p-value and fold change columns to numeric (if not already)
p_value_data[[p_value_col]] <- as.numeric(as.character(p_value_data[[p_value_col]]))
p_value_data[[fold_change_col]] <- as.numeric(as.character(p_value_data[[fold_change_col]]))
# Create the Category column before filtering out NA values
p_value_data$Category <- with(p_value_data, paste(Type, ifelse(p_value_data[[p_value_col]] < 0.05 & p_value_data[[fold_change_col]] > 1, "Upregulated",
ifelse(p_value_data[[p_value_col]] < 0.05 & p_value_data[[fold_change_col]] < 1, "Downregulated", "Nonsignificant")), sep = "_"))
#  filter out rows with NA in the critical columns
p_value_data_filtered <- (p_value_data[, c(p_value_col, fold_change_col, "fly_gene", "Type", "Category")])
# Create the volcano plot using ggplot2
p <- ggplot(p_value_data_filtered, aes_string(x = fold_change_col, y = paste("-log10(", p_value_col, ")", sep = ""), color = "Category")) +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
geom_vline(xintercept = 1, linetype = "dashed", color = "grey", label = "Effect Size = 1") +
geom_point(alpha = 0.5) +
scale_color_manual(values = colors) +
geom_text_repel(aes(label = ifelse(p_value_data[[p_value_col]] < 0.05, as.character(fly_gene), ""),
fontface = ifelse(p_value_data_filtered$Type %in% c("Trip_short", "Trip_long"), "italic", "bold")),
box.padding = 0.35, point.padding = 0.5, size = 2.5, max.overlaps = Inf) +
labs(y = "-log10(P-value)", x = "Fold change", title = "_1WM_",
subtitle = paste("RNAi Knockdown Effect on", parameter)) +
theme_minimal()+
theme(legend.position = "none", plot.background = element_rect(color = "black", size = 0.5), panel.background = element_rect(color = "black", size = 0.5))
# Print the plot to the R console
print(p)
# Save the plot to the "Plots" directory
ggsave(file.path("ALL_1wm", paste0(parameter, "_volcano plot.png")), plot = p, width = 6, height = 6, bg = "white")
}
library(cluster)
library(readxl)
library(ggrepel)
library(cluster)
library(readxl)
library(ggrepel)
# Load your data
WORKING_DIR <- "C:/Users/krifa/Desktop/Analyse/Droso_Brs/Nantes Validations_Second_contrat/effect_size/GD/1WF"
p_value_data <- read_excel(file.path(WORKING_DIR, "GD_1wf_volcano plot_df.xlsx"))
library(cluster)
library(readxl)
library(ggrepel)
# Load your data
WORKING_DIR <- "C:/Users/krifa/Desktop/Analyse/Droso_Brs/Nantes Validations_Second_contrat/effect_size/GD/1WF"
p_value_data <- read_excel(file.path(WORKING_DIR, "GD_1wf_volcano plot_df.xlsx"))
library(cluster)
library(readxl)
library(ggrepel)
# Load your data
WORKING_DIR <- "C:/Users/krifa/Desktop/Analyse/Droso_Brs/Nantes Validations_Second_contrat/effect_size/GD/1WF"
p_value_data <- read_excel(file.path(WORKING_DIR, "GD_1wf_volcano plot_df.xlsx"))
library(cluster)
library(readxl)
library(ggrepel)
# Load your data
WORKING_DIR <- "C:/Users/krifa/Desktop/Analyse/Droso_Brs/Nantes Validations_Second_contrat/volcano_plots/GD/1WF"
p_value_data <- read_excel(file.path(WORKING_DIR, "GD_1wf_volcano plot_df.xlsx"))
# Replace commas with periods in the p-value data
p_value_data[, -1] <- lapply(p_value_data[, -1], function(x) as.numeric(gsub(",", ".", x)))
# List of parameters to test
parameter_list <- c("EDD", "ESD", "FS", "HP_median", "DI_median", "relaxtime", "SI_median", "AI", "SV", "CO", "peaked_median", "min.velocity", "max.velocity", "MAD_SI", "MAD_DI", "MAD_HP", "tt10r_median", "MAD_tt10r")
# Loop over each parameter to create a volcano plot
for(parameter in parameter_list) {
p_value_col <- parameter
fold_change_col <- paste("fold_change", parameter, sep = "_")
# Convert the p-value and fold change columns to numeric (if not already)
p_value_data[[p_value_col]] <- as.numeric(as.character(p_value_data[[p_value_col]]))
p_value_data[[fold_change_col]] <- as.numeric(as.character(p_value_data[[fold_change_col]]))
# Filter out rows with NA in the critical columns
p_value_data_filtered <- na.omit(p_value_data[, c(p_value_col, fold_change_col, "fly_gene")])
# Create the volcano plot using ggplot2
p <- ggplot(p_value_data_filtered, aes_string(x = fold_change_col, y = paste("-log10(", p_value_col, ")", sep = ""))) +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
geom_vline(xintercept = 1, linetype = "dashed", color = "grey", label = "Effect Size = 1") +
geom_point(alpha = 0.5) +
geom_text_repel(aes(label = ifelse(p_value_data_filtered[[p_value_col]] < 0.05 & p_value_data_filtered[[fold_change_col]] > 1, as.character(fly_gene), ""), color = "darkblue"),fontface = "bold",
data = p_value_data_filtered, nudge_y = 0.1, size = 2.5, max.overlaps = Inf) +
geom_text_repel(aes(label = ifelse(p_value_data_filtered[[p_value_col]] < 0.05 & p_value_data_filtered[[fold_change_col]] < 1, as.character(fly_gene), ""), color = "darkorange"),fontface = "bold",
data = p_value_data_filtered, nudge_y = 0.1, size = 2.5, max.overlaps = Inf) +
geom_text_repel(aes(label = ifelse(p_value_data_filtered[[p_value_col]] >= 0.05, as.character(fly_gene), ""), color = "grey"),
data = p_value_data_filtered, nudge_y = 0.1, size = 2.5, max.overlaps = Inf) +
labs(y = "-log10(P-value)", x = "Fold change", title = "_GD_1WF_", subtitle = paste("RNAi Knockdown Effect on", parameter)) +
theme_minimal()+
theme(legend.position = "none", plot.background = element_rect(color = "black", size = 0.5), panel.background = element_rect(color = "black", size = 0.5)) +
scale_color_manual(values = c("darkorange", "darkblue", "grey"))
# Print the plot to the R console
print(p)
# Save the plot to the "Plots" directory
ggsave(file.path("VDRC_GD_1WF", paste0(parameter, "_volcano plot.png")), plot = p, width = 6, height = 6, bg = "white")
}
library(cluster)
library(readxl)
library(ggplot2)
library(ggrepel)
# Set working directory to the path containing the data files
WORKING_DIR <- "C:/Users/krifa/Desktop/Analyse/Droso_Brs/Nantes Validations_Second_contrat/effect_size/ALL/1WF"
# Load the data from an Excel file
p_value_data <- read_excel("ALL_1wf_volcano plot_df_priority.xlsx")
# Set working directory to the path containing the data files
WORKING_DIR <- "C:/Users/krifa/Desktop/Analyse/Droso_Brs/Nantes Validations_Second_contrat/effect_size/ALL/1WF"
# Load the data from an Excel file
p_value_data <- read_excel("ALL_1wf_volcano plot_df_priority.xlsx")
# Set working directory to the path containing the data files
WORKING_DIR <- "C:/Users/krifa/Desktop/Analyse/Droso_Brs/Nantes Validations_Second_contrat/volcano_plots/ALL/1WF"
# Load the data from an Excel file
p_value_data <- read_excel("ALL_1wf_volcano plot_df_priority.xlsx")
# Set working directory to the path containing the data files
WORKING_DIR <- "C:/Users/krifa/Desktop/Analyse/Droso_Brs/Nantes Validations_Second_contrat/volcano_plots/ALL/1WM"
# Load the data from an Excel file
p_value_data <- read_excel("ALL_1wm_volcano plot_df.xlsx")
library(cluster)
library(readxl)
library(ggrepel)
library(cluster)
library(readxl)
library(ggrepel)
# Load your data
WORKING_DIR <- "C:/Users/krifa/Desktop/Analyse/Droso_Brs/Nantes Validations_Second_contrat/volcano_plots/GD/1WM"
p_value_data <- read_excel(file.path(WORKING_DIR, "GD_1wm_volcano plot_df.xlsx"))
# Replace commas with periods in the p-value data
p_value_data[, -1] <- lapply(p_value_data[, -1], function(x) as.numeric(gsub(",", ".", x)))
# List of parameters to test
parameter_list <- c("EDD", "ESD", "FS", "HP_median", "DI_median", "relaxtime", "SI_median", "AI", "SV", "CO", "peaked_median", "min.velocity", "max.velocity", "MAD_SI", "MAD_DI", "MAD_HP", "tt10r_median", "MAD_tt10r")
# Loop over each parameter to create a volcano plot
for(parameter in parameter_list) {
p_value_col <- parameter
fold_change_col <- paste("fold_change", parameter, sep = "_")
# Convert the p-value and fold change columns to numeric (if not already)
p_value_data[[p_value_col]] <- as.numeric(as.character(p_value_data[[p_value_col]]))
p_value_data[[fold_change_col]] <- as.numeric(as.character(p_value_data[[fold_change_col]]))
# Filter out rows with NA in the critical columns
p_value_data_filtered <- na.omit(p_value_data[, c(p_value_col, fold_change_col, "fly_gene")])
# Create the volcano plot using ggplot2
p <- ggplot(p_value_data_filtered, aes_string(x = fold_change_col, y = paste("-log10(", p_value_col, ")", sep = ""))) +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
geom_vline(xintercept = 1, linetype = "dashed", color = "grey", label = "Effect Size = 1") +
geom_point(alpha = 0.5) +
geom_text_repel(aes(label = ifelse(p_value_data_filtered[[p_value_col]] < 0.05 & p_value_data_filtered[[fold_change_col]] > 1, as.character(fly_gene), ""), color = "darkorange"),fontface = "bold",
data = p_value_data_filtered, nudge_y = 0.1, size = 2.5, max.overlaps = Inf) +
geom_text_repel(aes(label = ifelse(p_value_data_filtered[[p_value_col]] < 0.05 & p_value_data_filtered[[fold_change_col]] < 1, as.character(fly_gene), ""), color = "darkblue"),fontface = "bold",
data = p_value_data_filtered, nudge_y = 0.1, size = 2.5, max.overlaps = Inf) +
geom_text_repel(aes(label = ifelse(p_value_data_filtered[[p_value_col]] >= 0.05, as.character(fly_gene), ""), color = "grey"),
data = p_value_data_filtered, nudge_y = 0.1, size = 2.5, max.overlaps = Inf) +
labs(y = "-log10(P-value)", x = "Fold Change", title = "_GD_1WM_", subtitle = paste("RNAi Knockdown Effect on", parameter)) +
theme_minimal()+
theme(legend.position = "none", plot.background = element_rect(color = "black", size = 0.5), panel.background = element_rect(color = "black", size = 0.5)) +
scale_color_manual(values = c("darkorange", "darkblue", "grey"))
# Print the plot to the R console
print(p)
# Save the plot to the "Plots" directory
ggsave(file.path("VDRC_GD_1WM", paste0(parameter, "Fold change")), plot = p, width = 6, height = 6, bg = "white")
}
library(cluster)
library(readxl)
library(ggrepel)
# Load your data
WORKING_DIR <- "C:/Users/krifa/Desktop/Analyse/Droso_Brs/Nantes Validations_Second_contrat/volcano_plots/GD/1WM"
p_value_data <- read_excel(file.path(WORKING_DIR, "GD_1wm_volcano plot_df.xlsx"))
# Replace commas with periods in the p-value data
p_value_data[, -1] <- lapply(p_value_data[, -1], function(x) as.numeric(gsub(",", ".", x)))
# List of parameters to test
parameter_list <- c("EDD", "ESD", "FS", "HP_median", "DI_median", "relaxtime", "SI_median", "AI", "SV", "CO", "peaked_median", "min.velocity", "max.velocity", "MAD_SI", "MAD_DI", "MAD_HP", "tt10r_median", "MAD_tt10r")
# Loop over each parameter to create a volcano plot
for(parameter in parameter_list) {
p_value_col <- parameter
fold_change_col <- paste("fold_change", parameter, sep = "_")
# Convert the p-value and fold change columns to numeric (if not already)
p_value_data[[p_value_col]] <- as.numeric(as.character(p_value_data[[p_value_col]]))
p_value_data[[fold_change_col]] <- as.numeric(as.character(p_value_data[[fold_change_col]]))
# Filter out rows with NA in the critical columns
p_value_data_filtered <- na.omit(p_value_data[, c(p_value_col, fold_change_col, "fly_gene")])
# Create the volcano plot using ggplot2
p <- ggplot(p_value_data_filtered, aes_string(x = fold_change_col, y = paste("-log10(", p_value_col, ")", sep = ""))) +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
geom_vline(xintercept = 1, linetype = "dashed", color = "grey", label = "Effect Size = 1") +
geom_point(alpha = 0.5) +
geom_text_repel(aes(label = ifelse(p_value_data_filtered[[p_value_col]] < 0.05 & p_value_data_filtered[[fold_change_col]] > 1, as.character(fly_gene), ""), color = "darkorange"),fontface = "bold",
data = p_value_data_filtered, nudge_y = 0.1, size = 2.5, max.overlaps = Inf) +
geom_text_repel(aes(label = ifelse(p_value_data_filtered[[p_value_col]] < 0.05 & p_value_data_filtered[[fold_change_col]] < 1, as.character(fly_gene), ""), color = "darkblue"),fontface = "bold",
data = p_value_data_filtered, nudge_y = 0.1, size = 2.5, max.overlaps = Inf) +
geom_text_repel(aes(label = ifelse(p_value_data_filtered[[p_value_col]] >= 0.05, as.character(fly_gene), ""), color = "grey"),
data = p_value_data_filtered, nudge_y = 0.1, size = 2.5, max.overlaps = Inf) +
labs(y = "-log10(P-value)", x = "Fold change", title = "_GD_1WF_", subtitle = paste("RNAi Knockdown Effect on", parameter)) +
theme_minimal()+
theme(legend.position = "none", plot.background = element_rect(color = "black", size = 0.5), panel.background = element_rect(color = "black", size = 0.5)) +
scale_color_manual(values = c("darkorange", "darkblue", "grey"))
# Print the plot to the R console
print(p)
# Save the plot to the "Plots" directory
ggsave(file.path("VDRC_GD_1WM", paste0(parameter, "Fold change")), plot = p, width = 6, height = 6, bg = "white")
}
library(cluster)
library(readxl)
library(ggrepel)
# Load your data
WORKING_DIR <- "C:/Users/krifa/Desktop/Analyse/Droso_Brs/Nantes Validations_Second_contrat/volcano_plots/GD/1WM"
p_value_data <- read_excel(file.path(WORKING_DIR, "GD_1wm_volcano plot_df.xlsx"))
# Replace commas with periods in the p-value data
p_value_data[, -1] <- lapply(p_value_data[, -1], function(x) as.numeric(gsub(",", ".", x)))
# List of parameters to test
parameter_list <- c("EDD", "ESD", "FS", "HP_median", "DI_median", "relaxtime", "SI_median", "AI", "SV", "CO", "peaked_median", "min.velocity", "max.velocity", "MAD_SI", "MAD_DI", "MAD_HP", "tt10r_median", "MAD_tt10r")
# Loop over each parameter to create a volcano plot
for(parameter in parameter_list) {
p_value_col <- parameter
fold_change_col <- paste("fold_change", parameter, sep = "_")
# Convert the p-value and fold change columns to numeric (if not already)
p_value_data[[p_value_col]] <- as.numeric(as.character(p_value_data[[p_value_col]]))
p_value_data[[fold_change_col]] <- as.numeric(as.character(p_value_data[[fold_change_col]]))
# Filter out rows with NA in the critical columns
p_value_data_filtered <- na.omit(p_value_data[, c(p_value_col, fold_change_col, "fly_gene")])
# Create the volcano plot using ggplot2
p <- ggplot(p_value_data_filtered, aes_string(x = fold_change_col, y = paste("-log10(", p_value_col, ")", sep = ""))) +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
geom_vline(xintercept = 1, linetype = "dashed", color = "grey", label = "Effect Size = 1") +
geom_point(alpha = 0.5) +
geom_text_repel(aes(label = ifelse(p_value_data_filtered[[p_value_col]] < 0.05 & p_value_data_filtered[[fold_change_col]] > 1, as.character(fly_gene), ""), color = "darkorange"),fontface = "bold",
data = p_value_data_filtered, nudge_y = 0.1, size = 2.5, max.overlaps = Inf) +
geom_text_repel(aes(label = ifelse(p_value_data_filtered[[p_value_col]] < 0.05 & p_value_data_filtered[[fold_change_col]] < 1, as.character(fly_gene), ""), color = "darkblue"),fontface = "bold",
data = p_value_data_filtered, nudge_y = 0.1, size = 2.5, max.overlaps = Inf) +
geom_text_repel(aes(label = ifelse(p_value_data_filtered[[p_value_col]] >= 0.05, as.character(fly_gene), ""), color = "grey"),
data = p_value_data_filtered, nudge_y = 0.1, size = 2.5, max.overlaps = Inf) +
labs(y = "-log10(P-value)", x = "Effect Size", title = "_GD_1WM_", subtitle = paste("RNAi Knockdown Effect on", parameter)) +
theme_minimal()+
theme(legend.position = "none", plot.background = element_rect(color = "black", size = 0.5), panel.background = element_rect(color = "black", size = 0.5)) +
scale_color_manual(values = c("darkorange", "darkblue", "grey"))
# Print the plot to the R console
print(p)
# Save the plot to the "Plots" directory
ggsave(file.path("VDRC_GD_1WM", paste0(parameter, "Fold change")), plot = p, width = 6, height = 6, bg = "white")
}
library(cluster)
library(readxl)
library(ggrepel)
# Load your data
WORKING_DIR <- "C:/Users/krifa/Desktop/Analyse/Droso_Brs/Nantes Validations_Second_contrat/volcano_plots/GD/1WM"
p_value_data <- read_excel(file.path(WORKING_DIR, "GD_1wm_volcano plot_df.xlsx"))
# Replace commas with periods in the p-value data
p_value_data[, -1] <- lapply(p_value_data[, -1], function(x) as.numeric(gsub(",", ".", x)))
# List of parameters to test
parameter_list <- c("EDD", "ESD", "FS", "HP_median", "DI_median", "relaxtime", "SI_median", "AI", "SV", "CO", "peaked_median", "min.velocity", "max.velocity", "MAD_SI", "MAD_DI", "MAD_HP", "tt10r_median", "MAD_tt10r")
# Loop over each parameter to create a volcano plot
for(parameter in parameter_list) {
p_value_col <- parameter
fold_change_col <- paste("fold_change", parameter, sep = "_")
# Convert the p-value and fold change columns to numeric (if not already)
p_value_data[[p_value_col]] <- as.numeric(as.character(p_value_data[[p_value_col]]))
p_value_data[[fold_change_col]] <- as.numeric(as.character(p_value_data[[fold_change_col]]))
# Filter out rows with NA in the critical columns
p_value_data_filtered <- na.omit(p_value_data[, c(p_value_col, fold_change_col, "fly_gene")])
# Create the volcano plot using ggplot2
p <- ggplot(p_value_data_filtered, aes_string(x = fold_change_col, y = paste("-log10(", p_value_col, ")", sep = ""))) +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
geom_vline(xintercept = 1, linetype = "dashed", color = "grey", label = "Effect Size = 1") +
geom_point(alpha = 0.5) +
geom_text_repel(aes(label = ifelse(p_value_data_filtered[[p_value_col]] < 0.05 & p_value_data_filtered[[fold_change_col]] > 1, as.character(fly_gene), ""), color = "darkblue"),fontface = "bold",
data = p_value_data_filtered, nudge_y = 0.1, size = 2.5, max.overlaps = Inf) +
geom_text_repel(aes(label = ifelse(p_value_data_filtered[[p_value_col]] < 0.05 & p_value_data_filtered[[fold_change_col]] < 1, as.character(fly_gene), ""), color = "darkorange"),fontface = "bold",
data = p_value_data_filtered, nudge_y = 0.1, size = 2.5, max.overlaps = Inf) +
geom_text_repel(aes(label = ifelse(p_value_data_filtered[[p_value_col]] >= 0.05, as.character(fly_gene), ""), color = "grey"),
data = p_value_data_filtered, nudge_y = 0.1, size = 2.5, max.overlaps = Inf) +
labs(y = "-log10(P-value)", x = "Fold change", title = "_GD_1WM_", subtitle = paste("RNAi Knockdown Effect on", parameter)) +
theme_minimal()+
theme(legend.position = "none", plot.background = element_rect(color = "black", size = 0.5), panel.background = element_rect(color = "black", size = 0.5)) +
scale_color_manual(values = c("darkorange", "darkblue", "grey"))
# Print the plot to the R console
print(p)
# Save the plot to the "Plots" directory
ggsave(file.path("VDRC_GD_1WM", paste0(parameter, "_volcano plot.png")), plot = p, width = 6, height = 6, bg = "white")
}
library(cluster)
library(readxl)
library(ggrepel)
# Load your data
WORKING_DIR <- "C:/Users/krifa/Desktop/Analyse/Droso_Brs/Nantes Validations_Second_contrat/volcano_plots/GD/1WM"
p_value_data <- read_excel(file.path(WORKING_DIR, "GD_1wm_volcano plot_df.xlsx"))
# Replace commas with periods in the p-value data
p_value_data[, -1] <- lapply(p_value_data[, -1], function(x) as.numeric(gsub(",", ".", x)))
# List of parameters to test
parameter_list <- c("EDD", "ESD", "FS", "HP_median", "DI_median", "relaxtime", "SI_median", "AI", "SV", "CO", "peaked_median", "min.velocity", "max.velocity", "MAD_SI", "MAD_DI", "MAD_HP", "tt10r_median", "MAD_tt10r")
# Loop over each parameter to create a volcano plot
for(parameter in parameter_list) {
p_value_col <- parameter
fold_change_col <- paste("fold_change", parameter, sep = "_")
# Convert the p-value and fold change columns to numeric (if not already)
p_value_data[[p_value_col]] <- as.numeric(as.character(p_value_data[[p_value_col]]))
p_value_data[[fold_change_col]] <- as.numeric(as.character(p_value_data[[fold_change_col]]))
# Filter out rows with NA in the critical columns
p_value_data_filtered <- na.omit(p_value_data[, c(p_value_col, fold_change_col, "fly_gene")])
# Create the volcano plot using ggplot2
p <- ggplot(p_value_data_filtered, aes_string(x = fold_change_col, y = paste("-log10(", p_value_col, ")", sep = ""))) +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
geom_vline(xintercept = 1, linetype = "dashed", color = "grey", label = "Effect Size = 1") +
geom_point(alpha = 0.5) +
geom_text_repel(aes(label = ifelse(p_value_data_filtered[[p_value_col]] < 0.05 & p_value_data_filtered[[fold_change_col]] > 1, as.character(fly_gene), ""), color = "darkblue"),fontface = "bold",
data = p_value_data_filtered, nudge_y = 0.1, size = 2.5, max.overlaps = Inf) +
geom_text_repel(aes(label = ifelse(p_value_data_filtered[[p_value_col]] < 0.05 & p_value_data_filtered[[fold_change_col]] < 1, as.character(fly_gene), ""), color = "darkorange"),fontface = "bold",
data = p_value_data_filtered, nudge_y = 0.1, size = 2.5, max.overlaps = Inf) +
geom_text_repel(aes(label = ifelse(p_value_data_filtered[[p_value_col]] >= 0.05, as.character(fly_gene), ""), color = "grey"),
data = p_value_data_filtered, nudge_y = 0.1, size = 2.5, max.overlaps = Inf) +
labs(y = "-log10(P-value)", x = "Fold change", title = "_GD_1WM_", subtitle = paste("RNAi Knockdown Effect on", parameter)) +
theme_minimal()+
theme(legend.position = "none", plot.background = element_rect(color = "black", size = 0.5), panel.background = element_rect(color = "black", size = 0.5)) +
scale_color_manual(values = c("darkorange", "darkblue", "grey"))
# Print the plot to the R console
print(p)
# Save the plot to the "Plots" directory
ggsave(file.path("VDRC_GD_1WM", paste0(parameter, "_volcano plot.png")), plot = p, width = 6, height = 6, bg = "white")
}
